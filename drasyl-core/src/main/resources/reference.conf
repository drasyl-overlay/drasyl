drasyl {
  # The network ID is an integer number which isolates drasyl networks. Connections between nodes
  # will occur only if both peers use the same network ID. The main network has ID 1. If you supply
  # your own custom network ID which is different than the main network, your nodes will not connect
  # to other nodes and form a private network. If you’re planning to create your own network on the
  # Internet, it’s best to choose a network ID that isn’t already used.
  # Note: Make sure that the configured Super Peers use the same network ID.
  network.id = 1

  # Each node has a unique identity. It is composed of a public-private key pair. The address
  # of the node is derived from the public key. In a future release, messages will be signed
  # and encrypted with it.
  identity {
    # This proof of work can be can be provided as evidence that work has been put into
    # the creation of the identity. (-1 := null)
    proof-of-work = -1

    # This public key can be announced to other nodes so that they can send messages to this
    # node.
    public-key = ""

    # This private key must be kept secret. Otherwise, other nodes may use this node's identity
    # to sign and decrypt messages.
    private-key = ""

    # Path to the file with the identity. Is only read if public-key and private-key are
    # empty. If the file does not exist, a new key pair is generated and stored in the file.
    path = "drasyl.identity.json"
  }

  # The Drasyl Node can start a local server. This allows other nodes to discover it and
  # connect to it and send messages.
  server {
    # If you disable this server, a super peer must be specified. Otherwise no communication
    # with the network is possible!
    enabled = true

    # IP address that server should listen on.
    bind-host = "0.0.0.0"

    # Port that server should listen on. A port number of `0` means that the port number
    # is automatically allocated. However, a random port makes automatic discovery of this node
    # more difficult
    bind-port = 22527

    # Tries to expose the server via via UPnP-IGD/NAT-PMP/PCP
    #
    # If this option is enabled, drasyl tries to automatically create a port mapping
    # on discovered UPnP-IGD/NAT-PMP/PCP devices.
    #
    # If this option is disabled, the server is probably not available from outside the local
    # network.
    #
    # If you create a drasyl super-peer node, it is recommended to disable this option and open
    # a port by yourself.
    #
    # If you are on a public or corporate network, this feature will probably not work (is denied).
    # In this case, we recomment to disable this function.
    expose.enabled = true

    # Contains a list of (public) URLs where this node can be reached. May be necessary if the
    # node is used behind a proxy. The node sends this list to other nodes so that they can
    # connect to it more easily. If this list remains empty, the Drasyl Node will attempt to
    # discover its (public) endpoints automatically.
    endpoints = [] # example value: ["ws://192.168.178.112:22527", "wss://behind.proxy.de/drasyl/node"]

    # Initializer used by Netty to create a channel for incoming new connections. This value
    # normally does not need to be changed.
    channel-initializer = "org.drasyl.peer.connection.server.DefaultServerChannelInitializer"

    # Determines how long the server waits for a handshake by the client for incoming messages.
    # If the handshake is not performed within the time limit, the connection is terminated.
    # If the limit is too low, slow clients may not be able to connect to the server in time.
    handshake-timeout = 30s

    ssl {
      # When enabled, the server generates temporary self-signed certificates, allowing encrypted
      # communication with clients. For productive environments we recommend to use a reverse
      # proxy which terminates the encryption.
      enabled = false

      # Specifies which TLS protocol versions the server should support.
      protocols = ["TLSv1.3", "TLSv1.2"]
    }

    # The server sends ping messages to all its clients at regular intervals to ensure that they
    # are still properly connected. If there are no pong replies, the connection is considered
    # unhealthy and will be terminated.
    idle {
      # The maximum amount of time the server waits for a single ping message to respond. A
      # value of 0 or less disables ping messages.
      # Note: When running drasyl behind a reverse proxy (e.g. nginx, Apache, ...) you should make
      # sure that this value is not set too high. Otherwise the proxy may drop connections due to
      # inactivity.
      timeout = 50s

      # Specifies how many ping retries the server will make before the connection is considered
      # broken. May not be less than 1 or greater than 32767.
      retries = 3
    }
  }

  # The drasyl node can connect to another node and use it as super peer. All messages that the
  # local node cannot deliver directly are sent to the super peer so that it can attempt delivery.
  super-peer {
    # When enabled, the node attempts to connect to a Super Peer via the endpoints listed below.
    # The node will reject all children joins as long as this option is enabled.
    enabled = true

    # List of endpoints that are used to connect to a Super Peer. Entries at the beginning of
    # the list are first tried.
    # Optionally, the Super Peers' public keys can be added as a URI fragment (example:
    # wss://production.env.drasyl.org#025fff6f625f5dee816d9f8fe43895479aecfda187cb6a3330894a07e698bc5bd8).
    # If a key is specified, the client can verify the identity of the Super Peer.
    # Note: Make sure that the configured Super Peers use the same network ID as this node.
    endpoints = ["wss://production.env.drasyl.org#025fff6f625f5dee816d9f8fe43895479aecfda187cb6a3330894a07e698bc5bd8"]

    # If the connection to the super peer is lost, a new connection is attempted after a some
    # time. Here you can specify a list with the desired delays, which the node will wait before
    # the 1st, 2nd, 3rd, n-th. attempt. The node will never give up trying to re-establish a
    # connection. If the number of attempts exceeds the number of elements in the list, the last
    # element is always used. If the list is empty, the node will not attempt to reconnect to
    # the super peer.
    retry-delays = [0s, 1s, 2s, 4s, 8s, 16s, 32s, 1m]

    # Determines how long the client waits for a handshake confirmation from the super peer.
    # If the handshake is not performed within the time limit, the connection is terminated.
    # If the limit is too low, slow super peers may not be able to confirm in time.
    handshake-timeout = 30s

    # Initializer used by Netty to create a channel for super peer connection. This value
    # normally does not need to be changed.
    channel-initializer = "org.drasyl.peer.connection.client.DefaultClientChannelInitializer"

    # The client sends ping messages to its super peer at regular intervals to ensure that they
    # are still properly connected. If there are no pong replies, the connection is considered
    # unhealthy and will be terminated.
    idle {
      # The maximum amount of time the client waits for a single ping message to respond. A
      # value of 0 or less disables ping messages.
      timeout = 1m

      # Specifies how many ping retries the client will make before the connection is considered
      # broken. May not be less than 1 or greater than 32767.
      retries = 3
    }
  }

  # drasyl can use shared memory to automatically discover and communicate with other nodes running
  # on the same JVM
  intra-vm-discovery.enabled = true

  # drasyl can use the file system to discover other drasyl nodes running on the local computer.
  local-host-discovery {
    # When enabled, the node writes its own information to the directory specified below. At the
    # same time, the directory is also searched for information on other nodes.
    enabled = true

    # This directory is searched for other drasyl nodes. If nothing is specified here, a
    # "drasyl-discovery" directory in the system's temp directory will be used.
    path = ""

    # Defines how long the information written to the directory should be considered as up-to-date.
    # Older files in the directory are considered outdated and therefore will be ignored.
    # This node automatically refreshes its own information to keep them up-to-date.
    # All nodes of a directory should use the same lease time
    lease-time = 1m
  }

  # Besides the connection to the Super Peer, drasyl will not initially establish connections to
  # other nodes. By default, all messages are relayed to the recipient via the super peer.
  # In addition to this "uplink" connection, drasyl can try to establish direct connections to the
  # receivers. If enabled, drasyl will try to establish a direct connection with the recipient after
  # a message has been sent, so that future messages do not need to be relayed.
  direct-connections {
    # When enabled, the node attempts to create direct connection to other peers.
    enabled = true

    # The maximum number of simultaneous direct connections to other peers. One connection per peer
    # is required. Set to 0 to allow unlimited number of connections.
    max-concurrent-connections = 128

    # If the connection to the other node is lost, a new connection is attempted after a some
    # time. Here you can specify a list with the desired delays, which the node will wait before
    # the 1st, 2nd, 3rd, n-th. attempt. As long as the demand for a direct connection exists, the
    # node will never give up trying to re-establish a connection. If the number of attempts exceeds
    # the number of elements in the list, the last element is always used. If the list is empty, the
    # node will not attempt to reconnect to the other node.
    retry-delays = [0s, 1s, 2s, 4s, 8s, 16s, 32s, 1m]

    # Determines how long the client waits for a handshake confirmation from the other peer.
    # If the handshake is not performed within the time limit, the connection is terminated.
    # If the limit is too low, slow peers may not be able to confirm in time.
    handshake-timeout = 30s

    # Initializer used by Netty to create a channel for direct peer connection. This value
    # normally does not need to be changed.
    channel-initializer = "org.drasyl.peer.connection.client.DefaultClientChannelInitializer"

    # The client sends ping messages to the other peer at regular intervals to ensure that they
    # are still properly connected. If there are no pong replies, the connection is considered
    # unhealthy and will be terminated.
    idle {
      # The maximum amount of time the client waits for a single ping message to respond. A
      # value of 0 or less disables ping messages.
      timeout = 1m

      # Specifies how many ping retries the client will make before the connection is considered
      # broken. May not be less than 1 or greater than 32767.
      retries = 3
    }
  }

  message {
    # The maximum amount of time this node waits for a all chunks of a composed message.
    # If the message does not arrive in this time, the message and all existing and
    # following chunks are dropped.
    composed-message-transfer-timeout = 1m

    # Specifies the maximum length of a single message. The node will discard larger messages before
    # sending and receiving. All nodes in the network should have use the same max length value.
    # Note: An oversized value can quickly lead to an OutOfMemoryError exception. For large payloads
    # the streaming API is recommended. For technical reasons, there may be several copies of the
    # message in RAM during transmission; this must be taken into account when applying this setting.
    # TODO: Currently, chunking is not fully implemented. Therefore you should not increase this value
    max-content-length = 32KiB

    # Limits the lifespan of a message and prevents it from circulating indefinitely on the network.
    # Every outgoing message starts with the value defined here. Each node decreases the
    # message's hop-limit value before routing it to the next node. If the hop-limit value reaches
    # zero before the message arrives at its destination, then the message is discarded.
    hop-limit = 64
  }

  # Size of the TCP Flush Buffer. Is used to minimize IO overhead.
  # A high value is good for throughput.
  # A low value is good for latency.
  flush-buffer-size = 256

  # drasyl can monitor various metrics (e.g. number of known peers, children, messages received and
  # sent, etc.) and push them rate-aggregated to Influx on a periodic interval. No message contents
  # or public keys of other peers are logged.
  monitoring {
    # If activated, the node collects data and sends it to Influx
    enabled = false

    influx {
      uri = "http://localhost:8086"
      user = ""
      password = ""
      database = "drasyl"
      reporting-frequency = 1m
    }
  }

  # Every plugin that should be auto-loaded by drasyl, must be added to this object as object.
  # Only plugins that extends the AutoloadablePlugin class can be auto-loaded by drasyl.
  # The selected key for the object is also the path where all configurations are
  # provided to the plugin.
  # Example:
  # "org.drasyl.plugins.TestPlugin" {
  #  enabled = true
  # }
  plugins {}

  # drasyl can automatically (un-) marshall given objects. To prevent security risks through
  # unrestricted marshalling, types and packages can be defined here that are handled automatically.
  # drasyl differs between in- and outbound messages.
  #
  # A reckless implementation of a permitted class can leave the entire application and all
  # executing machines vulnerable to remote code execution.
  #
  # An attacker is in general interested in all "non-pure" methods, which have promising side
  # effects. A method is "pure" if:
  #   - The execution of the function has no side effects, and
  #   - the return value of the function depends only on the input parameters passed to the function.
  #
  # For example, a vulnerability could be a setter or getter that connects to a database.
  # A vulnerable class is for example the ch.qos.logback.core.db.DriverManagerConnectionSource.
  # An attacker can choose the URL arbitrarily. By calling getConnection,
  # Server Side Request Forgery (SSRF) and DOS attacks can occur.
  #
  # You can find more about this in the following literature:
  #   - Java Unmarshaller Security - Turning your data into code execution by Moritz Bechler:
  #     https://raw.githubusercontent.com/mbechler/marshalsec/master/marshalsec.pdf
  #   - Automated Discovery of Deserialization Gadget Chains by Ian Haken:
  #     https://i.blackhat.com/us-18/Thu-August-9/us-18-Haken-Automated-Discovery-of-Deserialization-Gadget-Chains-wp.pdf
  #   - Marshalling Pickles by Chris Frohoff and Garbriel Lawrence:
  #     https://frohoff.github.io/appseccali-marshalling-pickles/
  marshalling {
    inbound {
      # A list of all types that are supported by codec for the drasyl pipeline
      # With this list, a developer guarantees that all classes are secure and cannot be misused as a
      # deserialization gadget in the context of the marshaller.
      allowed-types = [
        "java.lang.Number",
        "java.lang.String"
      ]

      # Whether Java's primitive data types should automatically be allowed
      allow-all-primitives = true

      # Whether of all allowed data types their array representations should be allowed automatically
      allow-array-of-defined-types = true

      # A list of all packages whose classes automatically supported by the default codec of drasyl
      allowed-packages = []
    }

    outbound {
      # A list of all types that are supported by codec for the drasyl pipeline
      # With this list, a developer guarantees that all classes are secure and cannot be misused as a
      # deserialization gadget in the context of the marshaller.
      allowed-types = [
        "java.lang.Number",
        "java.lang.String"
      ]

      # Whether Java's primitive data types should automatically be allowed
      allow-all-primitives = true

      # Whether of all allowed data types their array representations should be allowed automatically
      allow-array-of-defined-types = true

      # A list of all packages whose classes automatically supported by the default codec of drasyl
      allowed-packages = []
    }
  }
}
