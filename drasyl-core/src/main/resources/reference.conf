akka {
  p2p {
    # Timeout after which the startup of the p2p subsystem is considered
    # to be failed. Increase this value if your p2p channels (see the
    # enabled-channels section) need longer time to be loaded.
    # time to be loaded.
    startup-timeout = 10 s

    # Timout after which the graceful shutdown of the p2p subsystem is
    # considered to be failed. After the timeout the p2p system is
    # forcefully shut down. Increase this value if your p2p channels (see
    # the enabled-channels section) need longer time to stop properly.
    shutdown-timeout = 10 s

    # List of the channels that will be loaded by the p2p.
    # A list of fully qualified config paths must be provided where
    # the given configuration path contains a channel-class key
    # pointing to an implementation class of the P2PTransportChannel interface.
    enabled-channels = ["org.drasyl.core.client.transport.relay.RetryRelayP2PTransportChannel"]

    # This channel connects to a relay server which sends messages to
    # the desired akka system and also sends messages from other systems
    # to us.
    # This enables communication with Akka systems to which no direct
    # connection can be established.
    relay {
      # The connection to the relay server is established to the
      # following url
      url = "wss://relayserver.incorum.org:443/"

      # This channel on the relay server is used. All clients must use
      # the same channel
      channel = default

      # Timeout after which the join to the relay server is considered
      # to be failed. Increase this value if your relay server need
      # longer time for confirmation.
      join-timeout = 30 s

      # retry-index * retry-delay
      retry-delay = 1 s

      # max retries bofore resilient session closes
      max-retries = 5

      # after forget retry counter is reset
      forget-delay = 10 m
    }

    direct {
      listen-port = 19001

      # list of seed peers with format {host}:{port}
      # default port: listen-port
      initial-peers = []
    }

    hostsystem {
      shared-dir = akka-p2p-sockets
    }
  }
}

drasyl {
  # User-Agent of this drasyl Node. Will be appended to each one sent by this node.
  user-agent = "${project.groupId}:${project.artifactId}/${version}~${git.commit.id.abbrev}"

  # Path to the file with the identity of this drasyl Node. File contains a public-private key
  # pair that is used to encrypt and sign messages sent by this node.
  identity.path = "drasylNodeIdentity.json"

  # The Drasyl Node can start a local server. This allows other nodes to discover it and
  # connect to it and send messages.
  server {
    # TODO: option is not used yet. server will always start
    # If you disable this server, a super peer must be specified. Otherwise no communication
    # with the network is possible!
    enabled = true

    # IP address that server should listen on.
    bind-host = "0.0.0.0"

    # Port that server should listen on. A port number of `0` means that the port number
    # is automatically allocated. However, a random port makes automatic discovery of this node
    # more difficult
    bind-port = 0

    # Contains a list of (public) URLs where this node can be reached. May be necessary if the
    # node is used behind a proxy. The node sends this list to other nodes so that they can
    # connect to it more easily. If this list remains empty, the Drasyl Node will attempt to
    # discover its (public) endpoints automatically.
    endpoints = [] # example value: ["ws://192.168.178.112:22527", "wss://behind.proxy.de/drasyl/node"]

    # Initializer used by Netty to create a channel for incoming new connections. This value
    # normally does not need to be changed.
    channel-initializer = "org.drasyl.core.server.handler.NodeServerInitializer"

    # TODO: chunking is not implemented yet. applications should not sent single messages
    # larger then this limit
    # Specifies the maximum size of a single message. The Drasyl Node will chunk larger
    # payloads according to this limit before sending. Incoming single messages larger then
    # this limit will be discarded. All nodes in the network should have the same value here.
    max-content-length = 1M

    # Determines how long the server waits for a handshake by the client for incoming messages.
    # If the handshake is not performed within the time limit, the connection is terminated.
    # If the limit is too low, slow clients may not be able to connect to the server in time.
    max-handshake-timeout = 30s

    ssl {
      enabled = false
      protocols = ["TLSv1.3", "TLSv1.2"]
    }

    # The size of the flush buffer, to minimize IO overhead.
    # A high value is good for throughput.
    # A low value is good for latency.
    flush-buffer-size = 256

    # The server sends ping messages to all its clients at regular intervals to ensure that they
    # are still properly connected. If there are no pong replies, the connection is considered
    # unhealthy and will be terminated.
    idle {
      # The maximum amount of time the server waits for a single ping message to respond. A
      # value of 0 or less disables ping messages.
      timeout = 1m

      # Specifies how many ping retries the server will make before the connection is considered
      # broken. May not be less than 1 or greater than 32767.
      retries = 3
    }
  }
}
